// –†–∂–∞—á–Ω—ã–π JavaScript –¥–ª—è –∫–æ—Ç–∏–∫–æ–≤
const img = document.getElementById('cat-img');
const memeText = document.getElementById('meme');
const memeInput = document.getElementById('meme-input');
const jokesList = document.getElementById('jokes-list');
const thumbs = document.getElementById('thumbs');
const confetti = document.getElementById('confetti');
const ctx = confetti.getContext('2d');

const jokes = [
  '‚Äî –ö–∏—Å–∞, —Ç—ã –∫—Ç–æ –ø–æ –∂–∏–∑–Ω–∏? ‚Äî –ü—É—à–∏—Å—Ç—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—ë—Ä –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ—Ä–æ–±–æ–∫.',
  '–ö–æ—Ç ‚Äî —ç—Ç–æ –∂–∏–¥–∫–æ—Å—Ç—å: –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ñ–æ—Ä–º—É –ª—é–±–æ–π –∫–æ—Ä–æ–±–∫–∏.',
  '–ï—Å–ª–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –ª–µ–∂–∏—Ç –∫–æ—Ç ‚Äî –∑–Ω–∞—á–∏—Ç, –¥–æ–∫—É–º–µ–Ω—Ç —É–∂–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω. –ù–∞–≤—Å–µ–≥–¥–∞.',
  '–ó–∞—á–µ–º –∫–æ—Ç –µ—Å—Ç —Ü–≤–µ—Ç—ã? –î–ª—è –±–∞–ª–∞–Ω—Å–∞: –Ω–µ–º–Ω–æ–≥–æ –≤–µ–≥–∞–Ω–∞ –≤ –µ–≥–æ –∫—Ä–µ–ø–∫–æ–º –º—è—Å–∫–æ–º —Å–µ—Ä–¥—Ü–µ.',
  '–ë—É–¥–∏–ª—å–Ω–∏–∫ –Ω–µ –Ω—É–∂–µ–Ω, –µ—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –º–∏—Å–∫–∞, –ø—É—Å—Ç–∞—è –≤ 06:00.',
  '–ö–æ—Ç —Å–∫–ª–∞–¥—ã–≤–∞–µ—Ç –ª–∞–ø–∫–∏ ‚Äî –∞ —Ç—ã —Å–∫–ª–∞–¥—ã–≤–∞–π –∑–∞–¥–∞—á–∏. –£—á–∏—Å—å —É –º–∞—Å—Ç–µ—Ä–∞.',
  '–ö—Ä–æ—à–∫–∏ –Ω–∞ —Å—Ç–æ–ª–µ ‚Äî —ç—Ç–æ —Å–∏—Å—Ç–µ–º–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∫–æ—Ç–∞.',
  '–ö–æ—Ç –≤–∏–¥–∏—Ç –≤ 5 —É—Ç—Ä–∞ —Ç–µ–Ω—å –æ—Ç —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞ –∏ —Ç–∞–∫–æ–π: –≤—Ä–µ–º—è –æ—Ö–æ—Ç—ã!',
  '–î–∏–µ—Ç–∞ –∫–æ—Ç–∞: –µ–º, —Å–ø–ª—é, –µ—â—ë —Ä–∞–∑ –ø—Ä–æ–≤–µ—Ä—è—é –º–∏—Å–∫—É. –ü–æ–≤—Ç–æ—Ä—è—Ç—å –±–µ–∑ –∫–æ–Ω—Ü–∞.'
];

// –î–æ–±–∞–≤–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —à—É—Ç–æ–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
function pushJoke() {
  const text = jokes[Math.floor(Math.random() * jokes.length)];
  const li = document.createElement('li');
  li.textContent = 'üòπ ' + text;
  jokesList.prepend(li);
}
for (let i=0; i<3; i++) pushJoke();

// –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ–≥–æ –∫–æ—Ç–∏–∫–∞
async function fetchCat() {
  try {
    const r = await fetch('https://api.thecatapi.com/v1/images/search');
    const data = await r.json();
    if (Array.isArray(data) && data[0]?.url) {
      img.src = data[0].url;
      return;
    }
    throw new Error('No URL in The Cat API response');
  } catch (e) {
    // Fallback –Ω–∞ placekitten
    const w = 600 + Math.floor(Math.random()*300);
    const h = 400 + Math.floor(Math.random()*200);
    img.src = `https://placekitten.com/${w}/${h}`;
  }
}

document.getElementById('btn-new').addEventListener('click', fetchCat);

// –ü–æ–¥–ø–∏—Å—å –∫ –º–µ–º—á–∏–∫—É
document.getElementById('btn-meme').addEventListener('click', () => {
  const text = memeInput.value.trim() || '–ö–û–¢–ò–ö –õ–£–ß–®–ï –í–°–ï–•! üê±';
  memeText.textContent = text.toUpperCase();
});

// –ö–ª–∏–∫ –ø–æ –∫–∞—Ä—Ç–∏–Ω–∫–µ ‚Äî –º–∞–ª–µ–Ω—å–∫–∞—è —Ç—Ä—è—Å–∫–∞
img.addEventListener('click', () => {
  img.style.transition = 'transform .08s ease';
  img.style.transform = 'scale(1.04) rotate(.6deg)';
  setTimeout(() => {
    img.style.transform = '';
    img.style.transition = 'transform .3s ease';
  }, 120);
});

// –ì–∞–ª–µ—Ä–µ—è –º–∏–Ω–∏–∞—Ç—é—Ä
function makeThumbs() {
  thumbs.innerHTML = '';
  for (let i=0; i<6; i++) {
    const w = 160 + Math.floor(Math.random()*60);
    const h = 110 + Math.floor(Math.random()*50);
    const t = document.createElement('img');
    t.src = `https://placekitten.com/${w}/${h}`;
    t.alt = '–ö–æ—Ç-–º–∏–Ω–∏';
    t.addEventListener('click', () => img.src = t.src);
    thumbs.appendChild(t);
  }
}
makeThumbs();

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–µ–º–∞ –∫–∞–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (—á–µ—Ä–µ–∑ Canvas)
document.getElementById('btn-save').addEventListener('click', async () => {
  // –°–æ–∑–¥–∞—ë–º canvas –≤ –ø–∞–º—è—Ç–∏, —Ä–∏—Å—É–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –∏ —Ç–µ–∫—Å—Ç
  const cv = document.createElement('canvas');
  const W = 800, H = 500;
  cv.width = W; cv.height = H;
  const c = cv.getContext('2d');

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–æ–±—Ö–æ–¥ CORS –º–æ–∂–µ—Ç –Ω–µ —Å—Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –¥–æ–º–µ–Ω–æ–≤)
  try {
    const im = await loadImage(img.src);
    c.drawImage(im, 0, 0, W, H);
  } catch {
    // –ï—Å–ª–∏ CORS –Ω–µ –ø–æ–∑–≤–æ–ª–∏–ª ‚Äî —Ñ–æ–Ω–æ–≤–∞—è –ø–ª–∞—à–∫–∞
    c.fillStyle = '#22253e';
    c.fillRect(0,0,W,H);
  }

  // –¢–µ–∫—Å—Ç –º–µ–º–∞
  const text = (memeText.textContent || '–ö–û–¢–ò–ö –ú–Ø–£').toUpperCase();
  c.font = 'bold 32px system-ui, -apple-system, Segoe UI, Roboto';
  c.textAlign = 'center';
  c.textBaseline = 'bottom';

  // –û–±–≤–æ–¥–∫–∞ –¥–ª—è —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏
  c.lineWidth = 6;
  c.strokeStyle = 'rgba(0,0,0,.6)';
  wrapTextStrokeFill(c, text, W/2, H-16, W-40, 36);

  // –°–∫–∞—á–∞—Ç—å
  const a = document.createElement('a');
  a.download = 'meow-meme.png';
  a.href = cv.toDataURL('image/png');
  a.click();
});

function wrapTextStrokeFill(ctx, text, x, y, maxWidth, lineHeight) {
  const words = text.split(' ');
  let line = '';
  const lines = [];
  for (let n=0; n<words.length; n++) {
    const testLine = line + words[n] + ' ';
    const metrics = ctx.measureText(testLine);
    if (metrics.width > maxWidth && n > 0) {
      lines.push(line);
      line = words[n] + ' ';
    } else {
      line = testLine;
    }
  }
  lines.push(line);
  const totalH = lines.length * lineHeight;
  let yy = y - totalH + lineHeight;
  for (const l of lines) {
    ctx.strokeText(l.trim(), x, yy);
    ctx.fillStyle = '#fff';
    ctx.fillText(l.trim(), x, yy);
    yy += lineHeight;
  }
}

function loadImage(url) {
  return new Promise((resolve, reject) => {
    const im = new Image();
    im.crossOrigin = 'anonymous';
    im.onload = () => resolve(im);
    im.onerror = reject;
    im.src = url;
  });
}

// –ü–∞—Ç–∏‚Äë—Ä–µ–∂–∏–º: –∫–æ–Ω—Ñ–µ—Ç—Ç–∏‚Äë–ª–∞–ø–∫–∏
let party = false;
const paws = [];
const PAW_EMOJI = 'üêæ';
const MAX = 90;

function resizeCanvas(){
  confetti.width = window.innerWidth;
  confetti.height = window.innerHeight;
}
resizeCanvas();
window.addEventListener('resize', resizeCanvas);

function spawnPaws(n=1){
  for (let i=0; i<n; i++) {
    paws.push({
      x: Math.random()*confetti.width,
      y: -20,
      vy: 1 + Math.random()*2.5,
      rot: Math.random()*Math.PI*2,
      vr: (Math.random()-0.5)*0.03,
      size: 14 + Math.random()*16,
      alpha: 0.8 + Math.random()*0.2
    });
  }
  if (paws.length > MAX) paws.splice(0, paws.length - MAX);
}

function draw(){
  if (!party) return;
  ctx.clearRect(0,0,confetti.width, confetti.height);
  ctx.textAlign = 'center';
  ctx.textBaseline = 'middle';
  paws.forEach(p => {
    p.y += p.vy;
    p.rot += p.vr;
    ctx.save();
    ctx.globalAlpha = p.alpha;
    ctx.translate(p.x, p.y);
    ctx.rotate(p.rot);
    ctx.font = `${p.size}px serif`;
    ctx.fillText(PAW_EMOJI, 0, 0);
    ctx.restore();
  });
  // –£–¥–∞–ª—è–µ–º –≤—ã—à–µ–¥—à–∏–µ –∑–∞ —ç–∫—Ä–∞–Ω
  for (let i=paws.length-1; i>=0; i--) {
    if (paws[i].y > confetti.height + 40) paws.splice(i,1);
  }
  requestAnimationFrame(draw);
}

document.getElementById('btn-party').addEventListener('click', () => {
  party = !party;
  if (party) {
    spawnPaws(50);
    const iv = setInterval(() => party && spawnPaws(8), 180);
    confetti.dataset.timer = iv;
    draw();
  } else {
    clearInterval(confetti.dataset.timer);
    ctx.clearRect(0,0,confetti.width, confetti.height);
  }
});

// –°—Ç–∞—Ä—Ç–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ—Ç–∏–∫–∞ –ª—É—á—à–µ –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å UI
setTimeout(fetchCat, 200);
